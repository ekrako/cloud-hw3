name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Generate Log File
        run: |
          echo "$(date --iso-8601=minutes)" > /tmp/log.txt
          echo "Eran Krakovsky, Noa Landau" >> /tmp/log.txt
      -
        name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: cloud-hw3:latest
          outputs: type=docker,dest=/tmp/cloud-hw3.tar
      - 
        name: log failed build
        if: failure()
        run: |
          echo "image not able to be built" >> /tmp/log.txt
      - 
        name: log success build
        run: |
          echo "image successfully built" >> /tmp/log.txt
      -
        name: Upload image
        uses: actions/upload-artifact@v3
        with:
            name: docker-image
            path: |
              /tmp/cloud-hw3.tar
      -
        name: Upload log
        if: always()
        uses: actions/upload-artifact@v3
        with:
            name: logs
            path: |
              /tmp/log.txt
        

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download Docker Image
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: /tmp
      -
        name: Download logs
        uses: actions/download-artifact@v3
        with:
          name: logs
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/cloud-hw3.tar
      -
        name: Run container
        run: |
          docker run --rm -d -p 8000:5001 cloud-hw3:latest
          if [ $? -eq 0 ]; then
            echo "Container up and running" >> /tmp/log.txt
          else
            echo "Container failed to run" >> /tmp/log.txt
          fi
      - 
        name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - 
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
      -
        name: Run tests
        run: |
          pytest tests/tests1.py -v > /tmp/assn3_test_results.txt
          echo "tests succeeded" >> /tmp/log.txt
      - 
        name: log failed tests
        if: failure()
        run: |
          echo "tests failed" >> /tmp/log.txt
      -
        name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
            name: logs
            path: |
              /tmp/assn3_test_results.txt
              /tmp/log.txt